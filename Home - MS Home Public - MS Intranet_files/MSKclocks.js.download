 function getTimeByDiff(diff) {
        var date = new Date();
        var utfLocal = date.getTimezoneOffset();
        date.setMinutes(date.getMinutes() + diff + utfLocal);
        return date;
    }
    function setupAnalogClock(canvas, clockWidth, date, label) {
		var testcanvas=document.createElement("canvas");
		if(!testcanvas.getContext || !testcanvas.getContext("2d")){
			return false;
		}
		
        var ctx = canvas.getContext("2d");

		


        var centerX = canvas.width / 2;
        var centerY = canvas.height / 2;

        function tick() {

            date.setSeconds(date.getSeconds() + 1);
            label.innerHTML = date.toLocaleTimeString();
            ctx.clearRect(0, 0, canvas.width, canvas.height);
            drawStatic();

            var seconds = date.getSeconds();
            ctx.strokeStyle = "white";
            ctx.lineWidth = 1;
            drawHand(clockWidth / 3, seconds * 6);

            var minutes = date.getMinutes();
            ctx.strokeStyle = "white";
            ctx.lineWidth = 2;
            drawHand(clockWidth / 3, minutes * 6);

            var hours = (date.getHours());
            ctx.strokeStyle = "white";
            ctx.lineWidth = 2;
            drawHand(clockWidth / 4, (hours + (minutes / 60)) * 30);

            function drawStatic() {
                ctx.beginPath();
                ctx.arc(centerX, centerY, clockWidth / 1, 0, 1 * Math.PI, false);
                ctx.strokeStyle = "white";
                ctx.lineWidth = 1;
                ctx.stroke();
                ctx.closePath();

                ctx.beginPath();
                ctx.arc(centerX, centerY, 1, 0, 1 * Math.PI, false);
                ctx.fillStyle = "white";
                ctx.fill();
                ctx.closePath();

                drawHours();
                //drawMins();

                function drawHours() {
                    var i = 12;
                    ctx.strokeStyle = "white";
                    ctx.lineWidth = 1;
                    while (i > 0) {
                        ctx.save();
                        ctx.beginPath();
                        ctx.translate(centerX, centerY);
                        var angle = (i * 30) * Math.PI / 180;
                        ctx.rotate(angle);
                        ctx.translate(0, -clockWidth / 2);

                        // Drawing numbers doesn't look so good because of the origin of the text
                        // ctx.save();
                        // ctx.translate(0, -10);
                        // ctx.rotate(-angle);
                        // ctx.fillText(i, -3, 0);
                        // ctx.restore();

                        ctx.moveTo(0, 0);
                        ctx.lineTo(0, 10);
                        ctx.stroke();
                        ctx.closePath();
                        ctx.restore();
                        i--;
                    }
                }

                function drawMins() {
                    var i = 60;
                    ctx.strokeStyle = "white";
                    ctx.lineWidth = 1;
                    while (i > 0) {
                        ctx.save();
                        ctx.beginPath();
                        ctx.translate(centerX, centerY);
                        var angle = (i * 6) * Math.PI / 180;
                        ctx.rotate(angle);
                        ctx.translate(0, -clockWidth / 2);

                        // Drawing numbers doesn't look so good because of the origin of the text
                        // ctx.save();
                        // ctx.translate(0, -10);
                        // ctx.rotate(-angle);
                        // ctx.fillText(i, -3, 0);
                        // ctx.restore();

                        ctx.moveTo(0, 0);
                        ctx.lineTo(0, 3);
                        ctx.stroke();
                        ctx.closePath();
                        ctx.restore();
                        i--;
                    }
                }

            }

            function drawHand(length, angle) {
                ctx.save();
                ctx.beginPath();
                ctx.translate(centerX, centerY);
                ctx.rotate(-180 * Math.PI / 180); // Correct for top left origin
                ctx.rotate(angle * Math.PI / 180);
                ctx.moveTo(0, 0);
                ctx.lineTo(0, length);
                ctx.stroke();
                ctx.closePath();
                ctx.restore();
            }
        }

        tick();
        window.setInterval(tick, 1000);
    }